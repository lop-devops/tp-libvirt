- virtual_network.connectivity_check.ethernet_interface:
    type = connectivity_check_ethernet_interface
    start_vm = no
    timeout = 240
    outside_ip = 'www.redhat.com'
    host_iface =
    extra_attrs = {}
    variants user_type:
        - non_root_user:
            test_user = USER.EXAMPLE
            test_passwd = PASSWORD.EXAMPLE
            unpr_vm_name = UNPRIVILEGED_VM.EXAMPLE
    variants:
        - positive_test:
            status_error = no
            variants:
                - no_mtu:
                    mtu_attrs = {}
                - larger_mtu:
                    tap_mtu = 1400
                    iface_mtu = 3000
                    mtu_attrs = {'mtu': {'size': ${iface_mtu}}}
                - smaller_mtu:
                    tap_mtu = 1400
                    iface_mtu = 1200
                    mtu_attrs = {'mtu': {'size': ${iface_mtu}}}
                - smaller_mtu_multi_ifaces:
                    only two_ifaces
                    tap_mtu = 1400
                    iface_mtu = 1200
                    iface_mtu_2 = 1150
                    mtu_attrs = {'mtu': {'size': ${iface_mtu}}}
            variants tap_type:
                - tap:
                    vm_ping_outside = pass
                    vm_ping_host_public = pass
                    variants iface_amount:
                        - one_iface:
                        - two_ifaces:
                            only smaller_mtu_multi_ifaces
                            extra_attrs = {'rom': {'enabled': 'no'}}
                            iface_attrs_2 = {'type_name': 'ethernet', 'target': {'dev': tap_name_2, 'managed': 'no'}, 'model': 'virtio', 'mtu': {'size': '${iface_mtu_2}'}, 'driver': {'driver_attr': {'name': 'vhost'}}, 'rom': {'enabled': 'no'}} 
                            s390-virtio, aarch64:
                                extra_attrs =
                                iface_attrs_2 = {'type_name': 'ethernet', 'target': {'dev': tap_name_2, 'managed': 'no'}, 'model': 'virtio', 'mtu': {'size': '${iface_mtu_2}'}, 'driver': {'driver_attr': {'name': 'vhost'}}}
                - macvtap:
                    vm_ping_outside = pass
                    vm_ping_host_public = fail
            iface_attrs = {'target': {'dev': tap_name, 'managed': 'no'}, 'model': 'virtio', 'type_name': 'ethernet', **${mtu_attrs}, **${extra_attrs}}
            s390-virtio, aarch64:
                iface_attrs = {'target': {'dev': tap_name, 'managed': 'no'}, 'model': 'virtio', 'type_name': 'ethernet', **${mtu_attrs}}
        - negative_test:
            status_error = yes
            variants:
                - no_target_dev:
                    iface_attrs = {'model': 'virtio', 'type_name': 'ethernet', 'target': {'managed': 'no'}}
                    err_msg = target dev must be supplied when managed='no'
                - target_dev_not_exist:
                    iface_attrs = {'model': 'virtio', 'type_name': 'ethernet', 'target': {'dev': 'test', 'managed': 'no'}}
                    err_msg = "target managed='no' but specified dev doesn't exist"
                - managed_yes:
                    func_supported_since_libvirt_ver = (9,0,0) 
                    tap_type = tap
                    iface_attrs = {'model': 'virtio', 'type_name': 'ethernet', 'target': {'dev': tap_name, 'managed': 'yes'}}
                    err_msg = The .* interface already exists
                - no_multi_queue_flag:
                    func_supported_since_libvirt_ver = (10,8,0)
                    tap_type = tap
                    tap_flag = 
                    iface_attrs = {'model': 'virtio', 'type_name': 'ethernet', 'target': {'dev': tap_name, 'managed': 'no'}, 'driver': {'driver_attr': {'queues': '2'}}}
                    err_msg = Unable to create multiple fds for tap device .*\(maybe existing device was created without multi_queue flag\)
    variants:
        - managed_no:
