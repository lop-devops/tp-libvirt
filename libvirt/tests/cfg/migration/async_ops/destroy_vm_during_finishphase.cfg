- migration.async_ops.destroy_vm_during_finishphase:
    type = destroy_vm_during_finishphase
    migration_setup = 'yes'
    storage_type = 'nfs'
    setup_local_nfs = 'yes'
    disk_type = "file"
    disk_source_protocol = "netfs"
    mnt_path_name = ${nfs_mount_dir}
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # Extra options to pass after <domain> <desturi>
    virsh_migrate_extra = ''
    # SSH connection time out
    ssh_timeout = 60
    # Local URI
    start_vm = "yes"
    virsh_migrate_connect_uri = 'qemu:///system'
    virsh_migrate_dest_state = "running"
    virsh_migrate_src_state = "shut off"
    image_convert = 'no'
    server_ip = "${migrate_dest_host}"
    server_user = "root"
    server_pwd = "${migrate_dest_pwd}"
    check_network_accessibility_after_mig = "yes"
    migrate_desturi_port = "16509"
    migrate_desturi_type = "tcp"
    virsh_migrate_desturi = "qemu+tcp://${migrate_dest_host}/system"
    status_error = "yes"
    migrate_again_status_error = "no"
    virsh_migrate_extra = "--bandwidth 10 --postcopy-bandwidth 10"
    virsh_migrate_extra_mig_again = " "
    variants:
        - p2p:
            virsh_migrate_options = '--live --p2p --verbose'
        - non_p2p:
            virsh_migrate_options = '--live --verbose'
    variants:
        - with_postcopy:
            postcopy_options = '--postcopy'
    variants:
        - destroy_dst_vm:
            expected_event_src = ["Suspended Post-copy", "Suspended Post-copy Error"]
            expected_event_target = ["lifecycle.*Stopped Destroyed"]
            expected_dest_state = "nonexist"
            expected_src_state = "paused"
            err_msg = "domain is not running"
            action_during_mig = '[{"func": "virsh.migrate_postcopy", "func_param": "'%s' % params.get('migrate_main_vm')", "need_sleep_time": "10"}, {"func": "check_vm_status_during_mig", "func_param": {"vm_name": "${main_vm}", "src_state":"paused", "src_reason": "post-copy"}, "need_sleep_time": "5"}, {"func": "virsh.destroy", "func_param": {"name": "${main_vm}", "uri": "${virsh_migrate_desturi}"}}]'
        - destroy_src_vm:
            expected_event_src = ["Suspended Post-copy Error", "Stopped Destroyed"]
            expected_event_target = ["Resumed Post-copy Error"]
            expected_dest_state = "running"
            expected_src_state = "shut off"
            err_msg = "job 'migration in' failed in post-copy phase"
            action_during_mig = '[{"func": "virsh.migrate_postcopy", "func_param": "'%s' % params.get('migrate_main_vm')", "need_sleep_time": "10"}, {"func": "check_vm_status_during_mig", "func_param": {"vm_name": "${main_vm}", "src_state":"paused", "src_reason": "post-copy"}, "need_sleep_time": "5"}, {"func": "virsh.destroy", "func_param": {"name": "${main_vm}"}}]'
